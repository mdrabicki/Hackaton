#include "interactiveobject.h"

#include<QtWidgets>
InteractiveObject::InteractiveObject(QWidget* parent, Item itemType,int nr)
{
    this->ItemType=itemType;
    this->setParent(parent);
    this->parent=parent;
    setMouseTracking(true);
    setAttribute(Qt::WA_Hover);
    this->setStyleSheet("background:transparent;");
    
    createHovers(nr);
    




}

void createHovers(int nr){
    switch(ItemType){
    case (Item::identificator):
            this->setGeometry(125,632,60,40);
            itemPixmap= new QPixmap(":/scenes/1/identificator.png");

        break;
    case (Item::wrench):
            this->setGeometry(836,449,95,40);
            itemPixmap= new QPixmap(":/scenes/1/wrench.png");

        break;
    case (Item::body):
        this->setGeometry(463,486,315,204);
        itemPixmap= new QPixmap(":/scenes/1/body.png");

        break;
    case (Item::notes):
        this->setGeometry(1197,619,60,75);
        itemPixmap= new QPixmap(":/scenes/1/notes.png");
        break;
    case (Item::monitor):
        this->setGeometry(726,260,392,188);
        itemPixmap=new QPixmap(":/scenes/1/monitor.png");
        break;
    case (Item::computer):
        this->setGeometry(775,582,353,98);
        itemPixmap=new QPixmap(":/scenes/1/computer.png");
        break;

    };
    label = new QLabel(parent);
 //  label->show();
    connect(this,SIGNAL(pressed()),parent,SLOT(openNewDialogBox()));
}

/*bool InteractiveObject::event(QEvent* event)
{
  /*  switch(event->type())
    {
    case QEvent::HoverEnter:
        hoverEnter(static_cast<QHoverEvent*>(event));
        return true;
        break;
      case QEvent::HoverLeave:
        hoverLeave(static_cast<QHoverEvent*>(event));
        return true;
        break;
    default:
        break;
    }

   return QWidget::event(event);
} */

void InteractiveObject::hoverEnter(QHoverEvent* event){
 /* label->setPixmap(*itemPixmap);
  label->setGeometry(QRect(0,0,1366,768));
  label->show(); */

}

void InteractiveObject::hoverLeave(QHoverEvent *event){
    label->hide();
}

